<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dex.proto

namespace Binance\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Binance.Proto.StdSignature</code>
 */
class StdSignature extends \Google\Protobuf\Internal\Message
{
    /**
     * public key bytes of the signer address
     *
     * Generated from protobuf field <code>bytes pub_key = 1;</code>
     */
    protected $pub_key = '';
    /**
     * signature bytes, please check chain access section for signature generation
     *
     * Generated from protobuf field <code>bytes signature = 2;</code>
     */
    protected $signature = '';
    /**
     * another identifier of signer, which can be read from chain by account REST API or RPC
     *
     * Generated from protobuf field <code>int64 account_number = 3;</code>
     */
    protected $account_number = 0;
    /**
     * sequence number for the next transaction of the client, which can be read fro chain by account REST API or RPC. please check chain acces section for details.
     *
     * Generated from protobuf field <code>int64 sequence = 4;</code>
     */
    protected $sequence = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $pub_key
     *           public key bytes of the signer address
     *     @type string $signature
     *           signature bytes, please check chain access section for signature generation
     *     @type int|string $account_number
     *           another identifier of signer, which can be read from chain by account REST API or RPC
     *     @type int|string $sequence
     *           sequence number for the next transaction of the client, which can be read fro chain by account REST API or RPC. please check chain acces section for details.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Dex::initOnce();
        parent::__construct($data);
    }

    /**
     * public key bytes of the signer address
     *
     * Generated from protobuf field <code>bytes pub_key = 1;</code>
     * @return string
     */
    public function getPubKey()
    {
        return $this->pub_key;
    }

    /**
     * public key bytes of the signer address
     *
     * Generated from protobuf field <code>bytes pub_key = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPubKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->pub_key = $var;

        return $this;
    }

    /**
     * signature bytes, please check chain access section for signature generation
     *
     * Generated from protobuf field <code>bytes signature = 2;</code>
     * @return string
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * signature bytes, please check chain access section for signature generation
     *
     * Generated from protobuf field <code>bytes signature = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkString($var, False);
        $this->signature = $var;

        return $this;
    }

    /**
     * another identifier of signer, which can be read from chain by account REST API or RPC
     *
     * Generated from protobuf field <code>int64 account_number = 3;</code>
     * @return int|string
     */
    public function getAccountNumber()
    {
        return $this->account_number;
    }

    /**
     * another identifier of signer, which can be read from chain by account REST API or RPC
     *
     * Generated from protobuf field <code>int64 account_number = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAccountNumber($var)
    {
        GPBUtil::checkInt64($var);
        $this->account_number = $var;

        return $this;
    }

    /**
     * sequence number for the next transaction of the client, which can be read fro chain by account REST API or RPC. please check chain acces section for details.
     *
     * Generated from protobuf field <code>int64 sequence = 4;</code>
     * @return int|string
     */
    public function getSequence()
    {
        return $this->sequence;
    }

    /**
     * sequence number for the next transaction of the client, which can be read fro chain by account REST API or RPC. please check chain acces section for details.
     *
     * Generated from protobuf field <code>int64 sequence = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSequence($var)
    {
        GPBUtil::checkInt64($var);
        $this->sequence = $var;

        return $this;
    }

}

