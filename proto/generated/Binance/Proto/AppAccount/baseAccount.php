<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dex.proto

namespace Binance\Proto\AppAccount;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *    uint64 SIZE-OF-ENCODED // varint encoded length of the structure after encoding
 *    0x4BDC4C27   // hardcoded, object type prefix in 4 bytes
 *
 * Generated from protobuf message <code>Binance.Proto.AppAccount.baseAccount</code>
 */
class baseAccount extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes address = 1;</code>
     */
    protected $address = '';
    /**
     * Generated from protobuf field <code>repeated .Binance.Proto.Token coins = 2;</code>
     */
    private $coins;
    /**
     * Generated from protobuf field <code>bytes public_key = 3;</code>
     */
    protected $public_key = '';
    /**
     * Generated from protobuf field <code>int64 account_number = 4;</code>
     */
    protected $account_number = 0;
    /**
     * Generated from protobuf field <code>int64 sequence = 5;</code>
     */
    protected $sequence = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $address
     *     @type \Binance\Proto\Token[]|\Google\Protobuf\Internal\RepeatedField $coins
     *     @type string $public_key
     *     @type int|string $account_number
     *     @type int|string $sequence
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Dex::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes address = 1;</code>
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Generated from protobuf field <code>bytes address = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkString($var, False);
        $this->address = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .Binance.Proto.Token coins = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCoins()
    {
        return $this->coins;
    }

    /**
     * Generated from protobuf field <code>repeated .Binance.Proto.Token coins = 2;</code>
     * @param \Binance\Proto\Token[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCoins($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Binance\Proto\Token::class);
        $this->coins = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes public_key = 3;</code>
     * @return string
     */
    public function getPublicKey()
    {
        return $this->public_key;
    }

    /**
     * Generated from protobuf field <code>bytes public_key = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPublicKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->public_key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 account_number = 4;</code>
     * @return int|string
     */
    public function getAccountNumber()
    {
        return $this->account_number;
    }

    /**
     * Generated from protobuf field <code>int64 account_number = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAccountNumber($var)
    {
        GPBUtil::checkInt64($var);
        $this->account_number = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 sequence = 5;</code>
     * @return int|string
     */
    public function getSequence()
    {
        return $this->sequence;
    }

    /**
     * Generated from protobuf field <code>int64 sequence = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSequence($var)
    {
        GPBUtil::checkInt64($var);
        $this->sequence = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(baseAccount::class, \Binance\Proto\AppAccount_baseAccount::class);

